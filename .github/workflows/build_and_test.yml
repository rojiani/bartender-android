name: Build and Test

# https://github.com/actions/starter-workflows/blob/master/ci/blank.yml
on:
  # Triggers the workflow on push or pull request events but only for the $default-branch branch
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#  build:
#    needs: [ unit_tests, android_tests ]
#    runs-on: ubuntu-latest

  # This workflow contains a single job called "build"
  unit_tests:
    runs-on: [ ubuntu-latest ]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Unit tests
        run: ./gradlew test

  android_tests:
    # Use a macOS VM to take advantage of hardware accleration support provided by HAXM.
    runs-on: [ macos-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
        script: ./gradlew connectedCheck

## A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
##  build:
##    needs: [ unit_tests, android_tests ]
##    runs-on: ubuntu-latest
##    #    needs: [ unit_tests, android_tests ]
##    # Steps represent a sequence of tasks that will be executed as part of the job
##    steps:
##      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
##      - uses: actions/checkout@v2
##
##      # Runs a single command using the runners shell
##      - name: Run a one-line script
##        run: echo Hello, world!
#
#  # This workflow contains a single job called "build"
#  unit_tests:
#    runs-on: [ ubuntu-latest ]
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#
#      - name: Unit tests
#        run: ./gradlew test
#
#  android_tests:
#    # Use a macOS VM to take advantage of hardware accleration support provided by HAXM.
#    runs-on: [ macos-latest ]
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Instrumentation Tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 30
#        script: ./gradlew connectedCheck
