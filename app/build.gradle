apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'project-report'

android {
    compileSdkVersion 31
    buildToolsVersion "31.0.0"

    defaultConfig {
        applicationId "com.nrojiani.bartender"
        minSdkVersion 26
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.nrojiani.bartender.HiltAndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs = [
            '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi,kotlin.time.ExperimentalTime'
        ]
    }
    packagingOptions {
        resources {
            excludes += [
                'META-INF/AL2.0',
                'META-INF/LGPL2.1',
                'META-INF/fragment-testing_release.kotlin_module'
            ]
        }
    }

    testOptions {
        animationsDisabled = true

        unitTests {
            includeAndroidResources = true
        }
    }

    android {
        sourceSets {
            def sharedTestSrcDir = 'src/sharedTest/java'
            def sharedTestResourcesDir = 'src/sharedTest/resources'
            test {
                java.srcDirs += sharedTestSrcDir
                resources.srcDirs += sharedTestResourcesDir
            }
            androidTest {
                java.srcDirs += sharedTestSrcDir
                resources.srcDirs += sharedTestResourcesDir
            }
        }
    }
    lint {
        // https://github.com/Kotlin/kotlinx.coroutines/issues/2023
        disable 'DialogFragmentCallbacksDetector'
    }
}

dependencies {

    implementation(platform("org.jetbrains.kotlin:kotlin-bom:$kotlin_version"))
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "com.google.guava:guava:$guava_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.test.ext:junit-ktx:$junit_test_ext_version"

    testImplementation "net.lachlanmckee:timber-junit-rule:$timber_junit_rule_version"
    testImplementation "androidx.test:core-ktx:$androidx_test_core_version"
    testImplementation "androidx.arch.core:core-testing:$arch_testing_version"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotest_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$ok_http_version"
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation "app.cash.turbine:turbine:$turbine_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_test_ext_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_testing_version"
    androidTestImplementation "androidx.test:core-ktx:$androidx_test_core_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    androidTestImplementation "androidx.navigation:navigation-testing:$navigation_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "io.kotest:kotest-assertions-core-jvm:$kotest_version"
    androidTestImplementation "net.lachlanmckee:timber-junit-rule:$timber_junit_rule_version"

    // https://czerwinski.it/projects/android-hilt/#hilt-testing-extensions
    androidTestImplementation "androidx.test:runner:$androidx_test_runner_version"
    debugImplementation "it.czerwinski.android.hilt:hilt-fragment-testing:$hilt_fragment_testing_version"
    androidTestImplementation "it.czerwinski.android.hilt:hilt-fragment-testing:$hilt_fragment_testing_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
}

//apply from: "${gradleScriptsDir}/jacoco-android-app.gradle"

afterEvaluate {
    tasks.withType(Test) {
        /**
         * fix for retrofit https://github.com/square/retrofit/issues/3341
         */
        jvmArgs = [
            "--add-opens",
            "java.base/java.lang.invoke=ALL-UNNAMED"
        ]
    }
}

apply from: "$gradleScriptsDir/detekt.gradle"
